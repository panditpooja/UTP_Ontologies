@dc:creator "SIE Disruption Lab"
@dc:contributor "Joe Gregory"
@dc:description "A vocabulary to capture the foundation terminology required by the SIE Disruption Lab. Note that this is essentially a simplified version of gUFO."
@dc:hasVersion "0.1"
vocabulary <http://uaontologies.com/UA_Foundation/UA_Foundation#> as foundation {
	
	////////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Imports ///////
	
	
	// Import standard vocabularies	
	
    extends <http://purl.org/dc/elements/1.1/> as dc
    extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    extends <http://www.w3.org/2001/XMLSchema#> as xsd 
    
   	
	///////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Definitions ///////
	
	
	///// Aspects
	
	@rdfs:label "Contained Element"
	aspect ContainedElement
	
	@rdfs:label "Container"
	aspect Container
	
	@rdfs:label "SDC Carrier"
	aspect SDCCarrier
	
	@rdfs:label "GDC Carrier"
	aspect GDCCarrier
		
	
	///// Concepts
	
	@rdfs:label "IdentifiedEntity"
	concept IdentifiedEntity
	
	@rdfs:label "Occurrent"
	concept Occurrent < IdentifiedEntity, Container, ContainedElement, GDCCarrier, SDCCarrier [
		restricts all contains to Occurrent
		restricts all isContainedIn to Occurrent  
	]
	
	@rdfs:label "Continuant"
	concept Continuant < IdentifiedEntity
	
	@rdfs:label "Temporal Region"
	concept TemporalRegion < Occurrent, Container, ContainedElement [
		restricts all contains to TemporalRegion
		restricts all isContainedIn to TemporalRegion  
	]
	
	@rdfs:label "Process"
	concept Process < Occurrent, Container, ContainedElement, SDCCarrier [
		restricts all contains to Process
		restricts all isContainedIn to Process 
	]
	
	@rdfs:label "Independent Continuant"
	concept IndependentContinuant < Continuant, SDCCarrier, GDCCarrier
	
	@rdfs:label "Specifically Dependent Continuant"
	concept SpecificallyDependentContinuant < Continuant, SDCCarrier, GDCCarrier [
		restricts some specificallyDependentOn to SDCCarrier
	]
	
	@rdfs:label "Generically Dependent Continuant"
	concept GenericallyDependentContinuant < Continuant
	
	@rdfs:label "Realizable Entity"
	concept RealizableEntity < SpecificallyDependentContinuant
	
	@rdfs:label "Quality"
	concept Quality < SpecificallyDependentContinuant
	
	@rdfs:label "Disposition"
	concept Disposition < RealizableEntity
	
	@rdfs:label "Function"
	concept Function < Disposition, Container, ContainedElement [
		restricts all contains to Function
		restricts all isContainedIn to Function  
	]
	
	@rdfs:label "Material Entity"
	concept MaterialEntity < IndependentContinuant, ContainedElement
	
	@rdfs:label "Object Aggregate"
	concept ObjectAggregate < MaterialEntity, Container [
		restricts all contains to MaterialEntity
		restricts all isContainedIn to ObjectAggregate  
	]
	
	@rdfs:label "Object"
	concept Object < MaterialEntity
	
	@rdfs:label "Immaterial Entity"
	concept ImmaterialEntity < IndependentContinuant
	
	@rdfs:label "Site"
	concept Site < ImmaterialEntity, Container, ContainedElement [
		restricts all contains to Site
		restricts all isContainedIn to Site
	]
	
	@rdfs:label "Energy"
	concept Energy < ImmaterialEntity
	
	@rdfs:label "Role"
	concept Role < GenericallyDependentContinuant, Container, ContainedElement, SDCCarrier [
		restricts all contains to Role
		restricts all isContainedIn to Role  
	]
	
	
	
	///// Relations
	
	@rdfs:label "Contains"
	@dc:description "[=Contains=] is a..."
	relation entity Contains [
		from Container
		to ContainedElement
		@rdfs:label "contains"
		forward contains
		@rdfs:label "is contained in"
		reverse isContainedIn
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Specifically Dependent On"
	@dc:description "[=SpecificallyDependentOn=] is a..."
	relation entity SpecificallyDependentOn [
		from SpecificallyDependentContinuant
		to SDCCarrier
		@rdfs:label "specifically dependent on"
		forward specificallyDependentOn
		@rdfs:label "has specific dependent"
		reverse hasSpecificDependent
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Generically Dependent On"
	@dc:description "[=GenericallyDependentOn=] is a..."
	relation entity GenericallyDependentOn [
		from GenericallyDependentContinuant
		to GDCCarrier
		@rdfs:label "generically dependent on"
		forward genericallyDependentOn
		@rdfs:label "has generic dependent"
		reverse hasGenericDependent
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Occupies"
	@dc:description "[=Occupies=] is a..."
	relation entity Occupies [
		from MaterialEntity
		to Site
		@rdfs:label "occupies"
		forward occupies
		@rdfs:label "is occupied by"
		reverse isOccupiedBy
		asymmetric
		irreflexive
	]
	
	
	
	///// Scalar Properties
	
	@rdfs:label "has name"
	@dc:description "[=hasName=] is a FOUNDATIONAL scalar property - all entities can have a name"
	scalar property hasName [
		domain IdentifiedEntity
		range xsd:string
	]
	
	@rdfs:label "has ID"
	@dc:description "[=hasID=] is a FOUNDATIONAL scalar property - all entities can have an ID"
	scalar property hasID [
		domain IdentifiedEntity
		range xsd:string
	]
	
	@rdfs:label "has natural language description"
	@dc:description "[=hasNaturalLanguageDescription=] is a FOUNDATIONAL scalar property - all entities can have a natural language description"
	scalar property hasNaturalLanguageDescription [
		domain IdentifiedEntity
		range xsd:string
	]
	
	@rdfs:label "has begin instant"
	@dc:description "[=hasBeginInstant=] ..."
	scalar property hasBeginInstant [
		domain TemporalRegion
		range xsd:dateTime
	]
	
	@rdfs:label "has end instant"
	@dc:description "[=hasEndInstant=] ..."
	scalar property hasEndInstant [
		domain TemporalRegion
		range xsd:dateTime
	]
	
	///// Rules

	///// Extra comment to test v1.0.1
	
	
	}