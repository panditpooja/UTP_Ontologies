@dc:creator "SIE Disruption Lab"
@dc:contributor "Joe Gregory"
@dc:description "A vocabulary to capture the provenance patterns required by the SIE Disruption Lab."
@dc:hasVersion "0.1"
vocabulary <http://uaontologies.com/UA_Core/UA_Provenance#> as Prov {
	
	////////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Imports ///////
	
	
	// Import standard vocabularies	
	
    extends <http://purl.org/dc/elements/1.1/> as dc
    extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    extends <http://www.w3.org/2001/XMLSchema#> as xsd
    
    // Import relevant vocabularies
    
    //extends <http://siedepartment.com/SIE_Foundation/SIE_Foundation#> as foundation
	
	extends <http://uaontologies.com/UA_Core/UA_Information#> as info
	//extends <http://uaontologies.com/UA_Core/UA_Event#> as event
	extends <http://uaontologies.com/UA_Core/UA_Agent#> as agent
	//extends <http://uaontologies.com/UA_Core/UA_Measurement#> as meas
	
	
	///////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Definitions ///////
	
	///// Aspects
		
	
	
	///// Concepts
	
	
	
	///// Relations
	
	@rdfs:label "Generated By"
	@dc:description "[=Generated By=] is a "
	relation entity GeneratedBy [
		from info:InformationArtifact
		to agent:Agent
		@rdfs:label "generated by"
		forward generatedBy
		@rdfs:label "generates"
		reverse generates
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Approved By"
	@dc:description "[=ApprovedBy=] is a "
	relation entity ApprovedBy [
		from info:InformationArtifact
		to agent:Agent
		@rdfs:label "approved by"
		forward approvedBy
		@rdfs:label "approves"
		reverse approves
		asymmetric
		irreflexive
	]
	
	
	
	///// Scalar Properties
	
	@rdfs:label "generated at"
	@dc:description "[=generatedAt=] ..."
	scalar property generatedAt [
		domain info:InformationArtifact
		range xsd:dateTime
	]
	
	@rdfs:label "approved at"
	@dc:description "[=approvedAt=] ..."
	scalar property approvedAt [
		domain info:InformationArtifact
		range xsd:dateTime
	]
	
	
	
	///// Redefined Concepts
	
	
	
	///// Rules
	
	@rdfs:comment "If a role is responsible for a process that produces an artifact, then the agent who plays that role generated the artifact."
	rule Agent_with_role_generates_artifact [
	agent:responsibleFor(a, b) & agent:hasOutput(b,c) & agent:hasRole(d,a) -> generatedBy(c, d)
	]
	
	
}